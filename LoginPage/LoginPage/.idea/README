本项目分为两大部分：

Client：
1.有一个副线程。
2.副线程与主线程（UI线程）的通信机制Handler。（因为副线程是checklogin是否成功的，成功与否都会返回给UI一个值，这个通信就是有Handler完成的）
3.分写一个Login方法，将取得的值传递到业务层中。

这里主要的问题就是：1.把副线程写好 2.副线程和主线程之间的联系机制（hendler）要写好

4.Android的Client连接Server有两个方法：HttpClient和HttpUserConnection方法，这里我们先试用HttpClient方法；这种方法可以用Get或Post方法连接Server，我们先使用HttpClient对象和HttpGet对象以Get方式的请求传递参数到Server

/**
*Get和Post两种方法是不一样的，请求方式和封装方式都是不一样的，在Post中，我们要学会使用HttpParams和ClientConnectionManager对象，配置请求参数（Http协议版本号，响应超时时间是多少等等，可以更加细致的设置请求参数）
*/


Server：
1.处理GET和POST方法


JSON：
1.熟练掌握JSON数据格式
2.Android Client和Servlet Server是如何*封装和解析*JSON格式数据，*分别*使用什么对象来具体解码
  封装wrap：如何封装至JSON格式 ；解析parse：数据拿出来后是JSON数据格式，如何对JSON数据进行解析
  Client:JSONObject;JSONArray
  Server:json-lib;jackson (学会使用json-lib开源框架解析请求JSON数据|封装响应JSON数据)

JSON数据格式：
Object-->{String0:Value0,String1:Value1,String2:Value2}
Array-->[Value0,Value1,Value2]
Value-->string,number,object,array,true,false,null

example:

{
"people":[
{"firstName":"Steve","lastName":"Jobs"},{..},{..}
]
}

重难点：JSON数据表示对象和集合
  面向对象中，“单”的数据--》对象（JSONObject类）； “多”的数据--》集合（JSONArray类）；

  “单”：
  {
  "name":"charlie",
  "age","23"
  "interests":["singing","dancing","reading"]  //对象嵌套集合
  }

  “集合”：
    [
    {"name":"charlie","age","23"},{"name":alice","age","21"},{"name":"bob","age","22"} //集合嵌套对象
    ]

  *JSON实质就是：对象和集合能相互嵌套！这才是面向对象的逻辑思维*
  *我们之所以用JSON而不建议用URL传参的方式，是因为URL传参并不能表现每个paramsName的层级结构，而JSON有嵌套，所以能表示出层级结构（XML也有层级结构）*


我们的例子是（第一个），主要要学会分清Object和Array，以便使用JSONObject或JSONArray：(只要看最外面的是什么括号就好)
  data = {"loginName":"charlie","interests":["Music","PCGames","Sports"]} --> Object
  data = [{"loginName":"charlie","age":"23","id":"1"},{..},{..}] --> Array

  封装总结：总之就是两种：不是array嵌套object，要么就是object嵌套array

在server-side解析的时候，要把一些必要的jar包放到lib里面




